#include <SPI.h>
#include <LoRa.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include<Adafruit_SSD1306.h>
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels
#define OLED_RESET 4 
Adafruit_SSD1306 display(OLED_RESET);

int analogPinD = A0;      //Sound Sensor Droit
int analogPinG = A1;      //Sound Sensor Gauche
const char pinLedD = 7;   //Led Droite
const char pinLedG = 3;  //Led Gauche
int counter = 0;

// Parameters you can play with :

int txPower = 14; // from 0 to 20, default is 14
int spreadingFactor = 12; // from 7 to 12, default is 12
long signalBandwidth = 125E3; // 7.8E3, 10.4E3, 15.6E3, 20.8E3, 31.25E3,41.7E3,62.5E3,125E3,250E3,500e3, default is 125E3
int codingRateDenominator=5; // Numerator is 4, and denominator from 5 to 8, default is 5
int preambleLength=8; // from 2 to 20, default is 8
String payloadD =  "Son droit détecté : "; // you can change the payload
Sring payloadG =  "Son gauche détecté : ";

#define SS 10
#define RST 8
#define DI0 2
#define BAND 865E6  // Here you define the frequency carrier



void setup() {
  Wire.begin();
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);    //Adresse I2C de l'écran OLED
  pinMode(analogPinD, INPUT);
  pinMode(analogPinG, INPUT);
  pinMode(pinLedD, OUTPUT);
  pinMode(pinLedG, OUTPUT);
    
  Serial.begin(115200);
  while (!Serial);

  Serial.println("LoRa Sender");              // Impression sur le moniteur du bon fonctionnement Lora
  Serial.print("SetFrequency : ");
  Serial.print(BAND);
  Serial.println("Hz");
  Serial.print("SetSpreadingFactor : SF");
  Serial.println(spreadingFactor);

  SPI.begin();
  LoRa.setPins(SS,RST,DI0);

  

  if (!LoRa.begin(BAND)) {
    Serial.println("Starting LoRa failed!");    // En cas d'échec de l'envois ou de problème lié au Lora
    while (1);
  }
 LoRa.setTxPower(txPower,1);
 LoRa.setSpreadingFactor(spreadingFactor);
 LoRa.setSignalBandwidth(signalBandwidth);
 LoRa.setCodingRate4(codingRateDenominator);
 LoRa.setPreambleLength(preambleLength);
// LoRa.setPolarity(1);
 //LoRa.setFSK(); 
 
}
                          


  

void displayCross()                                     // setup screen
{ 
 

  display.clearDisplay();
  display.setTextColor(WHITE);
  display.setTextSize(1.5);
  display.setCursor(0,0);
  display.print("Seelence : ");
  display.setCursor(0,10);
  display.print("Droite : ");
  display.print(analogRead(analogPinD)); 
  display.setCursor(0,20);
  display.print("Gauche : ");
  display.print(analogRead(analogPinG));  
}
void displayCross2()                                      // display info on screen and LED control 
{
 

 if (digitalRead(analogPinD))
 {
   if (analogRead(analogPinD) > analogRead(analogPinG))
   {
      digitalWrite(pinLedD, HIGH);
      digitalWrite(pinLedG, LOW);
      display.setCursor(70,0);
      display.print( "===>");
      Serial.print("Son droit!    ");
      Serial.print("Sensor Value :");
      Serial.println(analogRead(analogPinD));
      Serial.print(payloadD);
      LoRa.beginPacket();
      LoRa.print(payloadD);
      LoRa.print(analogRead(analogPinD));
      LoRa.endPacket();
      counter++;
      
   }
    else
    {
    }
 }
    else
    {
          digitalWrite(pinLedD, LOW);
          LoRa.endPacket();
     
    
    }
  
 if (digitalRead(analogPinG))
 {
   if (analogRead(analogPinG) > analogRead(analogPinD))
   {
      digitalWrite(pinLedG, HIGH);
      digitalWrite(pinLedD, LOW);
      display.setCursor(70,0);
      display.print( "<===");
      Serial.print("Son gauche!    ");
      Serial.print("Sensor Value :");
      Serial.println(analogRead(analogPinG));
      Serial.print(payloadG);
      LoRa.beginPacket();
      LoRa.print(payloadG);
      LoRa.print(analogRead(analogPinG));
      LoRa.endPacket();
      counter++;
   }
    else
    {
    }
 }
 else{
     digitalWrite(pinLedG, LOW);
     LoRa.endPacket();
     
    }
}

void loop()                                                                    // Display loop on screen and sending packet
{
  
  displayCross();
  displayCross2();
  display.display();
  Serial.print("Sending packet with payload ");
  Serial.print(" N°");
  Serial.println(counter);
 

  
}
